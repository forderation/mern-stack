{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","zoom","center","useEffect","map","window","google","maps","current","Marker","position","ref","tyle","PlaceItem","React","useState","showMap","setShowMap","useHttpClient","loadingState","error","sendRequest","clearError","authContext","useHistory","useContext","AuthContext","showConfirmModal","setShowConfirmModal","setMapHandler","mapPrev","setConfirmModalHandler","prevModal","deleteConfirmHandler","a","process","id","Authorization","token","deletePlace","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay","Modal","show","onClick","header","address","contentClass","footerClass","footer","Button","coordinates","inverse","danger","src","image","alt","title","description","isLoggedIn","userId","creator","to","PlaceList","items","length","place","key","location","onDelete","UserPlaces","isLoading","useParams","history","userPlaces","setUserPlaces","responseData","places","console","log","fetchUserPlaces","push","placeId","filter","p"],"mappings":"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","file":"static/js/9.7ca48424.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from \"react\";\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const {zoom, center} = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n        center: center,\r\n        zoom: zoom,\r\n      });\r\n    \r\n      new window.google.maps.Marker({ position: props.center, map: map });\r\n\r\n  }, [center, zoom]);\r\n\r\n  \r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.tyle}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport \"./PlaceItem.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const [showMap, setShowMap] = React.useState(false);\r\n  const { loadingState, error, sendRequest, clearError } = useHttpClient();\r\n  const history = useHistory();\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const [showConfirmModal, setShowConfirmModal] = React.useState(false);\r\n\r\n  const setMapHandler = () => setShowMap((mapPrev) => !mapPrev);\r\n  const setConfirmModalHandler = () =>\r\n    setShowConfirmModal((prevModal) => !prevModal);\r\n  const deleteConfirmHandler = async () => {\r\n    setConfirmModalHandler();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: \"Bearer \" + authContext.token }\r\n      );\r\n      props.deletePlace(props.id);\r\n    } catch (err) {}\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {loadingState && <LoadingSpinner asOverlay />}\r\n      <Modal\r\n        show={showMap}\r\n        onClick={setMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item___modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={setMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onClick={setConfirmModalHandler}\r\n        header=\"Are you sure ?\"\r\n        contentClass=\"place-item___modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={setConfirmModalHandler}>\r\n              Cancel\r\n            </Button>\r\n            {!loadingState && (\r\n              <Button danger onClick={deleteConfirmHandler}>\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_BACKEND_BASE}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={setMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {authContext.isLoggedIn && authContext.userId == props.creator && (\r\n              <React.Fragment>\r\n                <Button to={`/place/${props.id}`}>EDIT</Button>\r\n                <Button danger onClick={setConfirmModalHandler}>\r\n                  DELETE\r\n                </Button>{\" \"}\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one ?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          description={place.description}\r\n          title={place.title}\r\n          address={place.address}\r\n          creator={place.creator}\r\n          coordinates={place.location}\r\n          deletePlace={props.onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/HttpHook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const userId = useParams().userId;\r\n  const history = useHistory();\r\n  const [userPlaces, setUserPlaces] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUserPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setUserPlaces(responseData.places);\r\n        console.log(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchUserPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const deletePlace = (placeId) => {\r\n    setUserPlaces((places) => places.filter((p) => p.id !== placeId));\r\n  };\r\n\r\n  const modalHttpError = () => {\r\n    clearError();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!userPlaces && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      <ErrorModal error={error} onClear={modalHttpError} />\r\n      {!isLoading && userPlaces && (\r\n        <PlaceList items={userPlaces} onDelete={deletePlace} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}