{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Backdrop","ReactDOM","createPortal","document","getElementById","MainHeader","NavLinks","authContext","useContext","AuthContext","isLoggedIn","userId","logout","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","setDrawerHandler","prevDrawer","Fragment"],"mappings":"iHAAA,kCA0CeA,IArCA,SAAAC,GACb,OAAIA,EAAMC,KAEN,uBACEC,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YAA+CH,EAAMI,SAC5D,kBADO,YACcJ,EAAMK,QAAU,kBACvCJ,KAAMD,EAAMC,MAEXD,EAAMM,UAITN,EAAMO,GAEN,kBAAC,IAAD,CACEA,GAAIP,EAAMO,GACVC,MAAOR,EAAMQ,MACbN,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YAA+CH,EAAMI,SAC5D,kBADO,YACcJ,EAAMK,QAAU,mBAEtCL,EAAMM,UAKX,4BACEJ,UAAS,yBAAoBF,EAAMG,MAAQ,UAAlC,YAA+CH,EAAMI,SAC5D,kBADO,YACcJ,EAAMK,QAAU,kBACvCI,KAAMT,EAAMS,KACZC,QAASV,EAAMU,QACfC,SAAUX,EAAMW,UAEfX,EAAMM,Y,gCCrCb,2CAYeM,IAPE,SAAAZ,GACf,OAAOa,IAASC,aACd,yBAAKZ,UAAU,WAAWQ,QAASV,EAAMU,UACzCK,SAASC,eAAe,oB,wMCAbC,G,MAJI,SAACjB,GAClB,OAAO,4BAAQE,UAAU,eAAeF,EAAMM,Y,gBCkCjCY,G,MAlCE,SAAClB,GAChB,IAAMmB,EAAcC,qBAAWC,KAE/B,OACE,wBAAInB,UAAU,aACZ,4BACE,kBAAC,IAAD,CAASK,GAAG,IAAIC,OAAK,GAArB,cAIDW,EAAYG,YACX,4BACE,kBAAC,IAAD,CAASf,GAAE,WAAMY,EAAYI,OAAlB,YAAX,cAGHJ,EAAYG,YACX,4BACE,kBAAC,IAAD,CAASf,GAAG,eAAZ,eAGFY,EAAYG,YACZ,4BACE,kBAAC,IAAD,CAASf,GAAG,SAAZ,iBAGJ,4BACGY,EAAYG,YACX,kBAACvB,EAAA,EAAD,CAAQW,QAASS,EAAYK,QAA7B,c,yBCVKC,G,MAhBI,SAAAzB,GACjB,IAAM0B,EACJ,kBAACC,EAAA,EAAD,CACEC,GAAI5B,EAAM6B,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEb,2BAAO/B,UAAU,cAAcQ,QAASV,EAAMU,SAAUV,EAAMM,WAIlE,OAAOO,IAASC,aAAaY,EAASX,SAASC,eAAe,kB,cCuBjDkB,UAjCQ,SAAAlC,GAAU,IAAD,EACUmC,oBAAS,GADnB,mBACvBC,EADuB,KACTC,EADS,KAGxBC,EAAmB,WACvBD,GAAgB,SAAAE,GAAU,OAAKA,MAGjC,OACE,kBAAC,IAAMC,SAAP,KACGJ,GAAgB,kBAACxB,EAAA,EAAD,CAAUF,QAAS4B,IACpC,kBAAC,EAAD,CAAYT,KAAMO,EAAc1B,QAAS4B,GACvC,yBAAKpC,UAAU,+BACb,kBAAC,EAAD,QAIJ,kBAAC,EAAD,KACE,4BAAQA,UAAU,4BAA4BQ,QAAS4B,GACrD,+BACA,+BACA,gCAEF,wBAAIpC,UAAU,0BACZ,kBAAC,IAAD,CAAMK,GAAG,KAAT,eAEF,yBAAKL,UAAU,+BACb,kBAAC,EAAD","file":"static/js/6.a7f166c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../../context/auth-context\";\r\nimport Button from \"../FormElements/Button\";\r\nimport \"./NavLinks.css\";\r\nconst NavLinks = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {authContext.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${authContext.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {authContext.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!authContext.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      <li>\r\n        {authContext.isLoggedIn && (\r\n          <Button onClick={authContext.logout}>LOGOUT</Button>\r\n        )}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const setDrawerHandler = () => {\r\n    setDrawerIsOpen(prevDrawer => !prevDrawer);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={setDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={setDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={setDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n"],"sourceRoot":""}